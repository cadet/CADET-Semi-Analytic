// =============================================================================
//  CADET-semi-analytic - The semi-analytic extension of CADET
//  
//  Copyright © 2015-2020: Samuel Leweke¹²
//                                      
//    ¹ Forschungszentrum Juelich GmbH, IBG-1, Juelich, Germany.
//    ² University of Cologne, Cologne, Germany.
//  
//  All rights reserved. This program and the accompanying materials
//  are made available under the terms of the GNU Public License v3.0 (or, at
//  your option, any later version) which accompanies this distribution, and
//  is available at http://www.gnu.org/licenses/gpl.html
// =============================================================================

#include "VersionInfo.hpp"

namespace casema
{
	const char GIT_COMMIT_HASH[] = "@GIT_SHA1@";
	const char GIT_BRANCH[] = "@GIT_REFSPEC@";
	const char CASEMA_VERSION[] = "@CASEMA_VERSION@";
	const char DEPENDENCY_VERSIONS[] = "HDF5=@HDF5_VERSION@;GMP=@GMP_VERSION@;MPC=@MPC_VERSION@;MPFR=@MPFR_VERSION@";
	const char BUILD_TYPE[] = "@CMAKE_BUILD_TYPE@";
	const char COMPILER[] = "@CMAKE_CXX_COMPILER_ID@ @CMAKE_CXX_COMPILER_VERSION@";
	const char BUILD_HOST[] = "@CMAKE_SYSTEM@";
	const char COMPILER_FLAGS[] = "@CMAKE_CXX_FLAGS@";

	const char* getVersion() CASEMA_NOEXCEPT
	{
		return casema::CASEMA_VERSION;
	}

	const char* getCommitHash() CASEMA_NOEXCEPT
	{
		return casema::GIT_COMMIT_HASH;
	}

	const char* getBranchRefspec() CASEMA_NOEXCEPT
	{
		return casema::GIT_BRANCH;
	}

	const char* getDependencyVersions() CASEMA_NOEXCEPT
	{
		return casema::DEPENDENCY_VERSIONS;
	}

	const char* getBuildType() CASEMA_NOEXCEPT
	{
		return casema::BUILD_TYPE;
	}

	const char* getCompiler() CASEMA_NOEXCEPT
	{
		return casema::COMPILER;
	}

	const char* getCompilerFlags() CASEMA_NOEXCEPT
	{
		return casema::COMPILER_FLAGS;
	}

	const char* getBuildHost() CASEMA_NOEXCEPT
	{
		return casema::BUILD_HOST;
	}
}
